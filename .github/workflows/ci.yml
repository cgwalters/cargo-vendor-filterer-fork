# Inspired by https://github.com/rust-analyzer/rust-analyzer/blob/master/.github/workflows/ci.yaml
# but tweaked in several ways.  If you make changes here, consider doing so across other
# repositories in e.g. ostreedev etc.
name: CI

permissions:
  actions: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  ACTIONS_LINTS_TOOLCHAIN: 1.75.0

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
      - name: Compile (no features)
        run: cargo test --no-run
      - name: Compile (all features)
        run: cargo test --no-run --all-features
      - name: Test
        run: cargo test --all-features -- --nocapture --quiet
      - name: Install
        run: cargo install --path . --debug
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: cargo-vendor-filterer
          path: target/debug/cargo-vendor-filterer
  build-test-other:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
      - name: Compile (no features)
        run: cargo test --no-run
      - name: Compile (all features)
        run: cargo test --no-run --all-features
      - name: Test
        run: cargo test --all-features -- --nocapture --quiet
  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.ACTIONS_LINTS_TOOLCHAIN }}
          components: clippy
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy -- -D warnings
  # Verify that we can successfully vendor selected crates
  test-crates:
    runs-on: ubuntu-latest
    needs: build-test
    strategy:
      matrix:
        repos: 
          - "nushell/nushell@0.73.0"
          - "containers/netavark@v1.8.0"
    steps:
      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: cargo-vendor-filterer
      - run: sudo install -m 0755 cargo-vendor-filterer /usr/bin
      - run: |
          r="${{ matrix.repos }}"
          parts=(${r//@/ })
          echo repo=${parts[0]} >> $GITHUB_ENV
          echo tag=${parts[1]} >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.repo }}
          ref: ${{ env.tag }}
      # For netavark
      - run: sudo apt install protobuf-compiler
      - run: mkdir -p .cargo && cargo-vendor-filterer --platform x86_64-unknown-linux-gnu --all-features true > .cargo/config.toml
      # This runs without networking, verifying we're building using vendored deps
      - run: rm ~/.cargo/{registry,git} -rf && unshare -Umn cargo check --offline
